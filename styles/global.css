/*********** Custom Properties *************/
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --primary-color: #18bb54;
  --primary-75-color: #18bb54bf;
  --primary-50-color: #1db95480;

  --second-color: #4274f4;
  --second-75-color: #4274f4bf;
  --second-50-color: #4274f480;

  --gray-light: #b2b2b2;
  --gray-normal: #777777;
  --gray-dark: #535353;

  --white-01: #ffffff;
  --white-02: #fcfcfc;
  --white-03: #f4f4f4;

  --black-01: #000000;
  --black-02: #121212;
  --black-03: #242424;

  --font: 'Nunito', sans-serif;
  --max-width: 1200px;
}

/************** Reset ***************/

html {
  box-sizing: border-box;
  font-family: var(--font);
  font-size: 16px;
  scroll-behavior: smooth;
}

body {
  margin: 0;
  overflow-x: hidden;
  color: var(--text-color);
  font-family: var(--font);
  background-color: var(--white-bg-color);
}

a {
  color: var(--link-color);
  transition: all 0.5s ease-out;
  text-decoration: none;
  font-family: var(--font);
}

button {
  font-family: var(--font) !important;
}
input,
/* input:focus, */
input:active,
input:target,
input:hover,
input::placeholder {
  font-family: var(--font) !important;
  caret-color: var(--white-03);
}

input.tx-wdark {
  caret-color: var(--black-03);
}

div.flex .relative.w-full input + label {
  width: 83.3333% !important;
}

div.mt-6 .relative.w-full input + label {
  width: 91.6666% !important;
}

a:hover {
  opacity: 0.8;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--font);
  font-weight: 600;
  margin: 0;
}

h1 {
  font-size: 2rem;
}

h2 {
  font-size: 1.5rem;
}

h3 {
  font-size: 1.25rem;
}

h4 {
  font-size: 1rem;
}

h5 {
  font-size: 0.85rem;
}

h6 {
  font-size: 0.7rem;
}

img {
  max-width: 100%;
  height: auto;
}

p {
  font-family: var(--font) !important;
  font-size: 20px;
  font-weight: 400;
}

span {
  font-family: var(--font) !important;
}

.vh-72 {
  max-height: 70vh;
}

/* Background color */
.bg-dark-01 {
  background: var(--black-01) !important;
  border-color: var(--black-02) !important;
}

.bg-dark-02 {
  background: var(--black-02) !important;
  border-color: var(--black-03) !important;
}

.bg-dark-03 {
  background: var(--black-03) !important;
  border-color: var(--black-02) !important;
}

.bg-white-03 {
  background-color: var(--white-03) !important;
  border-color: var(--white-02) !important;
}

.bg-white-01 {
  background-color: var(--white-01) !important;
  border-color: var(--white-02) !important;
}

.bg-primary {
  background: var(--primary-color) !important;
  border-color: var(--primary-color);
}

.bg-secondary {
  background: var(--second-color) !important;
  border-color: var(--second-color);
}

.bg-primary-50 {
  background: var(--primary-50-color) !important;
  border-color: var(--primary-50-color) !important;
}

.bg-secondary-50 {
  background: var(--second-50-color) !important;
  border-color: var(--second-50-color) !important;
}

.bg-primary:hover {
  /* box-shadow: var(--primary-color) 0px 6px 7px, */
  /* var(--primary-75-color) 0px -6px 15px, var(--primary-75-color) 0px 2px 3px, */
  /* var(--primary-75-color) 0px 6px 7px, var(--primary-50-color) 0px -2px 3px !important; */
  /* box-shadow: var(--primary-75-color) 0px 1px 4px; */
  box-shadow: var(--primary-75-color) 0px 5px 15px;
}

.br-primary {
  border-color: var(--primary-color);
}

.br-secondary {
  border-color: var(--second-color);
}

.br-primary-75 {
  border-color: var(--primary-75-color);
}

.br-secondary-75 {
  border-color: var(--secondary-75-color);
}

.br-white-03 {
  border-color: var(--white-03) !important;
}

.br-white-02 {
  border-color: var(--white-02) !important;
}

.br-white-01 {
  border-color: var(--white-01) !important;
}

.br-dark-03 {
  border-color: var(--black-03) !important;
}

.br-dark-02 {
  border-color: var(--black-02) !important;
}

.br-dark-01 {
  border-color: var(--black-01) !important;
}

.bg-dark-chat {
  background-color: var(--black-03) !important;
}

.bg-light-chat {
  background-color: var(--white-03) !important;
}

.bg-ndark {
  background-color: var(--black-01) !important;
}

.bg-nlight {
  background-color: var(--white-01) !important;
}

/* Text color */
.tx-wlight {
  color: var(--white-03) !important;
}

.tx-wdark {
  color: var(--black-01) !important;
}

/* [title]:hover::after {
  content: attr(title);
  position: absolute;
  left: 0;
  bottom: 100%;
  z-index: 40;
  white-space: nowrap;
  padding: 0.4rem 0.6rem;
  font-size: 0.875rem;
  line-height: 1.5;
  color: #ffffff;
  background-color: var(--black-03);
  border-radius: 0.25rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  pointer-events: none;
} */

input.tx-wlight + label {
  color: var(--white-03) !important;
  border: none;
}

input.tx-wdark + label {
  color: var(--black-01) !important;
  border: none !important;
}

.tx-wdark::placeholder {
  color: var(--black-02) !important;
}

.tx-nlight {
  color: var(--gray-light) !important;
}

.tx-ndark {
  color: var(--black-03) !important;
}

.tl-light {
  color: var(--white-02) !important;
}

.tl-dark {
  color: var(--black-02) !important;
}

.medias-absolute {
  width: 1000px;
  height: 700px;
}

.well {
  background: #333;
  color: #fff;
  text-align: center;
  padding: 16px;
  border-radius: 2px;
  margin: 8px;
}

.react-contextmenu {
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 0.25rem;
  color: #373a3c;
  font-size: 16px;
  margin: 2px 0 0;
  min-width: 160px;
  outline: none;
  opacity: 0;
  padding: 5px 0;
  pointer-events: none;
  text-align: left;
  transition: opacity 250ms ease !important;
}

.react-contextmenu.react-contextmenu--visible {
  opacity: 1;
  pointer-events: auto;
  z-index: 9999;
}

.react-contextmenu-item {
  background: 0 0;
  border: 0;
  color: #373a3c;
  cursor: pointer;
  font-weight: 400;
  line-height: 1.5;
  padding: 3px 20px;
  text-align: inherit;
  white-space: nowrap;
}

.react-contextmenu-item.react-contextmenu-item--active,
.react-contextmenu-item.react-contextmenu-item--selected {
  color: #fff;
  background-color: #20a0ff;
  border-color: #20a0ff;
  text-decoration: none;
}

.react-contextmenu-item.react-contextmenu-item--disabled,
.react-contextmenu-item.react-contextmenu-item--disabled:hover {
  background-color: transparent;
  border-color: rgba(0, 0, 0, 0.15);
  color: #878a8c;
}

.react-contextmenu-item--divider {
  border-bottom: 1px solid rgba(0, 0, 0, 0.15);
  cursor: inherit;
  margin-bottom: 3px;
  padding: 2px 0;
}
.react-contextmenu-item--divider:hover {
  background-color: transparent;
  border-color: rgba(0, 0, 0, 0.15);
}

.react-contextmenu-item.react-contextmenu-submenu {
  padding: 0;
}

.react-contextmenu-item.react-contextmenu-submenu > .react-contextmenu-item {
}

.react-contextmenu-item.react-contextmenu-submenu
  > .react-contextmenu-item:after {
  content: '▶';
  display: inline-block;
  position: absolute;
  right: 7px;
}

.example-multiple-targets::after {
  content: attr(data-count);
  display: block;
}

.bg-input-sign input:-webkit-autofill,
.bg-input-sign input:-webkit-autofill:hover,
/* input:-webkit-autofill:focus, */
.bg-input-sign textarea:-webkit-autofill,
.bg-input-sign textarea:-webkit-autofill:hover,
/* textarea:-webkit-autofill:focus, */
.bg-input-sign select:-webkit-autofill,
.bg-input-sign select:-webkit-autofill:hover {
  /* select:-webkit-autofill:focus { */
  /* border: 1px solid #253341; */
  -webkit-text-fill-color: var(--white-03);
  -webkit-box-shadow: 0 0 0px 1000px var(--black-03) inset;
  box-shadow: 0 0 0px 1000px var(--black-03) inset;
  transition: background-color 5s ease-in-out 0s;
  color: var(--white-03);
  font-family: var(--font) !important;
}

/* Text size */

/* utilities tailwindcss */

.primary__btn,
.secondary__btn,
.danger__btn {
  letter-spacing: 0.1rem;
}

.primary__btn:hover,
.secondary__btn:hover,
.danger__btn:hover {
  opacity: 0.8;
  color: var(--white-01);
}

.primary__btn p,
.secondary__btn p,
.danger__btn p {
  opacity: 0.8;
  color: var(--white-03);
}

/* Define la clase de estilo personalizada */
.spin {
  animation: spin 1s ease-out infinite;
}

/* Define las reglas de la animación */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
